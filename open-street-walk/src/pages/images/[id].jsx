import styles from "src/styles/Home.module.css";
import Link from "next/link";
import Head from "next/head";
import Cookies from "js-cookie";
import Image from "next/image";
import { FlashMessage } from "src/components/FlashMessage/FlashMessage.jsx";

// 要修正
// URLを取得する必要あり

const showImage = (props) => {
  console.log(props);
  return (
    <>
      <Head>
        <title>OpenStreetWalk</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.container}>
        <header className={styles.header}>
          <Link href={"/"} className={"styles.logo"}>
            OpenStreetWalk
          </Link>
          {props.isLogin ? (
            <ul className={styles.headerList}>
              <li>
                <Link href={`/users/${Cookies.get("user-id")}`}>
                  マイページ
                </Link>
              </li>
              <li>
                <Link href={"/pins/new"} className={styles.button}>
                  ピン作成
                </Link>
              </li>
              <li
                className={`${styles.signout} ${styles.button}`}
                onClick={() =>
                  props.authSignout(props.setNotice, props.setAlert)
                }
              >
                ログアウト
              </li>
            </ul>
          ) : (
            <ul className={styles.headerList}>
              <li>
                <Link href={"/signin"}>ログイン</Link>
              </li>
              <li>
                <Link href={"/signup"}>新規登録</Link>
              </li>
            </ul>
          )}
        </header>
        <FlashMessage
          notice={props.notice}
          setNotice={props.setNotice}
          alert={props.alert}
          setAlert={props.setAlert}
        />
        <main className={styles.main}>
          <div className={styles.image}>
            <Image
              src={process.env.NEXT_PUBLIC_API_URL + props.pinData.pin_url}
              alt="画像"
              layout="fill"
              objectFit="contain"
            />
          </div>
        </main>
      </div>
    </>
  );
};

export default showImage;

export const getServerSideProps = async (context) => {
  const id = context.params.id;
  const url = process.env.NEXT_PUBLIC_API_URL + `/pins/${id}`;
  try {
    const res = await fetch(url);
    if (!res.ok) {
      throw new Error("ピンのデータ取得に失敗");
    }
    console.log("Success: ピンのデータを取得");
    const pin = await res.json();
    const pinData = pin || null;
    return {
      props: {
        pinData,
      },
    };
  } catch (error) {
    console.error(error);
    return {
      props: {
        pinData: null,
      },
    };
  }
};
