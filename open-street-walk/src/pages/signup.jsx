import Cookies from "js-cookie";
import Head from "next/head";
import styles from "src/styles/Home.module.css";
import Link from "next/link";
import { useRouter } from "next/router";
import { useCallback, useState } from "react";
import { SignupForm } from "src/components/SignupForm/SignupForm";

const Signup = (props) => {
  const [email, setEmail] = useState();
  const [password, setPassword] = useState();
  const [confirmation, setConfirmation] = useState();
  const router = useRouter();

  //input
  const handleEmail = useCallback((e) => {
    setEmail(e.target.value);
  }, []);
  const handlePassword = useCallback((e) => {
    setPassword(e.target.value);
  }, []);
  const handleConfirmation = useCallback((e) => {
    setConfirmation(e.target.value);
  }, []);

  console.log(email, password, confirmation);
  //新規登録処理
  const url = "http://localhost:3000/auth";
  const handleAuth = async () => {
    if (password == confirmation) {
      const options = {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ email: `${email}`, password: password }), //入力された値を入れるように変更
      };
      try {
        const res = await fetch(url, options);
        if (!res.ok) {
          throw new Error("新規登録失敗");
        }
        console.log("新規登録成功");
        const data = await res.json();
        //ログイン状態の変更
        props.setIsLogin(true);
        const uidData = res.headers.get("uid");
        const clientData = res.headers.get("client");
        const accessTokenData = res.headers.get("access-token");
        //新規登録成功でクッキーのセット
        Cookies.set("uid", uidData);
        Cookies.set("client", clientData);
        Cookies.set("access-token", accessTokenData);
        router.push("/"); //redirect
        console.log(data, uidData, clientData, accessTokenData);
      } catch (error) {
        console.error(error);
        //新規登録失敗でクッキーの削除
        Cookies.remove("uid");
        Cookies.remove("client");
        Cookies.remove("access-token");
      }
    }
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.container}>
        <header className={styles.header}>
          <Link href={"/"}>OpenStreetWalk</Link>
        </header>

        <main className={styles.main}>
          <SignupForm
            email={email}
            password={password}
            confirmation={confirmation}
            handleEmail={handleEmail}
            handlePassword={handlePassword}
            handleConfirmation={handleConfirmation}
            handleAuth={handleAuth}
          />
        </main>
        <footer className={styles.footer}>footer</footer>
      </div>
    </>
  );
};

export default Signup;
